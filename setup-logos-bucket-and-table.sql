-- Script para crear bucket de logos y tabla configuracion
-- Ejecutar en el SQL Editor de Supabase

-- 1. Crear el bucket de logos
INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
VALUES (
  'logos',
  'logos',
  true,
  2097152, -- 2MB en bytes
  ARRAY['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml']
) ON CONFLICT (id) DO NOTHING;

-- 2. Crear políticas de seguridad para el bucket logos
-- Política para permitir subir logos (solo usuarios autenticados)
CREATE POLICY "Permitir subir logos a usuarios autenticados" ON storage.objects
FOR INSERT WITH CHECK (
  bucket_id = 'logos' AND 
  auth.role() = 'authenticated'
);

-- Política para permitir ver logos (público)
CREATE POLICY "Permitir ver logos públicamente" ON storage.objects
FOR SELECT USING (
  bucket_id = 'logos'
);

-- Política para permitir actualizar logos (solo usuarios autenticados)
CREATE POLICY "Permitir actualizar logos a usuarios autenticados" ON storage.objects
FOR UPDATE USING (
  bucket_id = 'logos' AND 
  auth.role() = 'authenticated'
);

-- Política para permitir eliminar logos (solo usuarios autenticados)
CREATE POLICY "Permitir eliminar logos a usuarios autenticados" ON storage.objects
FOR DELETE USING (
  bucket_id = 'logos' AND 
  auth.role() = 'authenticated'
);

-- 3. Crear tabla configuracion con campo logo
CREATE TABLE IF NOT EXISTS public.configuracion (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  logo text null,
  titulo text null,
  subtitulo text null,
  constraint configuracion_pkey primary key (id)
) TABLESPACE pg_default;

-- Insertar registro inicial si no existe
INSERT INTO public.configuracion (titulo, subtitulo) 
SELECT 'Dashboard', 'Panel Admin' 
WHERE NOT EXISTS (SELECT 1 FROM public.configuracion LIMIT 1);

-- Habilitar RLS
ALTER TABLE public.configuracion ENABLE ROW LEVEL SECURITY;

-- Política para permitir lectura y escritura a usuarios autenticados
CREATE POLICY "Permitir acceso completo a usuarios autenticados" ON public.configuracion
  FOR ALL USING (auth.role() = 'authenticated');

-- Trigger para actualizar updated_at automáticamente
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_configuracion_updated_at 
    BEFORE UPDATE ON public.configuracion 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column();

-- 4. Verificar que el bucket se creó correctamente
SELECT 
  id,
  name,
  public,
  file_size_limit,
  allowed_mime_types
FROM storage.buckets 
WHERE id = 'logos';